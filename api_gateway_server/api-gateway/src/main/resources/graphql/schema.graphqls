enum Status {
    PENDING
    APPROVED
    REJECTED
    CANCELED
    COMPLETED
}

type UserInfoResponse {
    id: ID!
    username: String!
    email: String!
    phone: String!
}

type ItemResponse {
    id: ID!
    name: String!
    description: String!
    quantity: Int!
    price: Int!
    userId: ID!
}

type OrderResponse {
    id: ID!
    orderDate: String!
    orderItemResponses: [OrderItemResponse]!
    address: String!
    description: String!
    totalPrice: Int!
}

type OrderItemResponse {
    id: ID!
    orderId: ID!
    itemId: ID!
    price: Int!
    quantity: Int!
    status: Status!
    arrivalTime: String!
}

input RegisterUserRequest {
    username: String!
    password: String!
    email: String!
    phone: String!
}

input ItemRegisterRequest {
    name: String!
    description: String!
    quantity: Int!
    price: Int!
    sellerId: ID!
}

input PurchaseRequest {
    customerId: ID!
    address: String!
    description: String!
    itemList: [PurchaseItemRequest]!
    totalPrice: Int!
}

input PurchaseItemRequest {
    itemId: ID!
    price: Int!
    quantity: Int!
}

type Query {
    getAllUsers: [UserInfoResponse]
    getUser(userId: ID): UserInfoResponse
    getAllItems: [ItemResponse]
    getItem(itemId: ID): ItemResponse
    getAllOrders: [OrderResponse]
    getOrder(orderId: ID): OrderResponse
    getPurchaseList(customerId: ID): [OrderResponse]
}

type Mutation {
    registerUser(request: RegisterUserRequest): UserInfoResponse
    registerItem(request: ItemRegisterRequest): ItemResponse
    registerOrder(request: PurchaseRequest): OrderResponse
}